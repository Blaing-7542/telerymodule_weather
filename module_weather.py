from pyrogram import Client, filters
import requests
from datetime import datetime, timedelta

with open("userbot.info", "r") as file:
    lines = file.readlines()
    prefix_userbot = lines[2].strip()

cinfo = f"‚òÄ`{prefix_userbot}weather`"
ccomand = " –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ. –ü—Ä–∏–º–µ—Ä: `weather –ú–æ—Å–∫–≤–∞`"

# –î–ª—è API –Ω—É–∂–µ–Ω API_KEY. –í–∑—è—Ç—å –µ–≥–æ –º–æ–∂–Ω–æ –Ω–∞ —Å–∞–π—Ç–µ "https://home.openweathermap.org"
with open("owmapi.info", "r") as file:
    lines = file.readlines()
    API_KEY = lines[0].strip()


def command_weather(app):
    @app.on_message(filters.command("weather", prefixes=prefix_userbot))
    def weather(_, message):
        town = message.text.split(" ", maxsplit=1)[1]
        response = requests.get(
            f"http://api.openweathermap.org/data/2.5/weather?q={town}&appid={API_KEY}&units=metric&lang=ru")
        data = response.json()
        if response.status_code == 200:
            town = data['name']
            temperature = data['main']['temp']
            weather_description = data['weather'][0]['description']
            timezone_offset = data['timezone']
            weather_rus, emoji = weather_translation.get(weather_description, (weather_description, "‚ùì"))
            if emoji == "‚ùì":
                weather_rus = weather_description
            time_weather = (datetime.utcnow() + timedelta(seconds=timezone_offset)).strftime('%H:%M')
            reply_text = (f"**üèô–ì–æ—Ä–æ–¥:** {town}\n"
                          f"**üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {temperature}¬∞C\n"
                          f"**{emoji}–ü–æ–≥–æ–¥–∞:** {weather_rus}\n"
                          f"**‚åõ–í—Ä–µ–º—è: {time_weather}**")
        else:
            reply_text = "**‚ùå–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.**"
        message.reply_text(reply_text)

weather_translation = {
    "—è—Å–Ω–æ": ("—è—Å–Ω–æ–µ –Ω–µ–±–æ", "‚òÄÔ∏è"),
    "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": ("–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ", "üå§"),
    "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏": ("–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏", "‚õÖ"),
    "–ø–∞—Å–º—É—Ä–Ω–æ": ("–ø–∞—Å–º—É—Ä–Ω–æ", "‚òÅÔ∏è"),
    "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å": ("–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å", "üåß"),
    "–¥–æ–∂–¥—å": ("–¥–æ–∂–¥—å", "üåß"),
    "–≥—Ä–æ–∑–∞": ("–≥—Ä–æ–∑–∞", "‚õà"),
    "—Å–Ω–µ–≥": ("—Å–Ω–µ–≥", "‚ùÑÔ∏è"),
    "—Ç—É–º–∞–Ω": ("—Ç—É–º–∞–Ω", "üå´"),
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": ("–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å", "üå§"),
}

print("–ú–æ–¥—É–ª—å weather –∑–∞–≥—Ä—É–∂–µ–Ω!")
